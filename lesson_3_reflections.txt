When would you want to create a remote repository rather than keeping allyour work local?
	
	When working with others, it makes sharing updates with other easier. When working
	by yourself, it can be used as a back up in case the local copy gets corrupted

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	
	If git pulls automatically conflict will most likely to result in the code. By doing it manually, 
	you can decide when you want to integrate the changes introduced by the new update

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	Fork is when you make a copy of a repository from another person to your account on github. Useful when you want to make changes but don't have edit power in the original repository
	Clone is when you make a copy of a repository on github to your local machine. Use when collaborating with others
	Branch is extention from a master branch. Use when creating a new feature or bug fix

What is the benefit of having a copy of the last known state of the remote stored locally?
	
	Allows you to work offline. Also provides you a way to view the changes between online repository
	and the local one
	
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	There are other version control such as SVN that you can use, but without version control, you'd
	need to use email or dropbox, which require a lot more work in tracking all the changes.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	Whenever there's a feature that you want to add, this way the master branch stays in a working state
	while you are working on the new feature. Small changes can probably be added directly to 
	the master branch, but it might be better to crate a branch and use a pull request for others 
	to review it first.